# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/06ef0486-32bd-4847-a3ec-5bcd4a7b1e5a";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-c0ad406e-27ca-4092-8fb9-58546c537824".device = "/dev/disk/by-uuid/c0ad406e-27ca-4092-8fb9-58546c537824";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/DAA9-0539";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/home/mjs/Documents" = {
    device = "/dev/disk/by-uuid/461e4b29-f140-4ee2-8488-935e0cacea5a";
    fsType = "ext4";
  };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/ef3e273d-cdfa-4a37-bbaa-442b0153fb33"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
